name: C/C++ CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Build project
        run: |
          make clean
          make

      #- name: Run tests
       # run: |
          # quando existir os testes
        #  make test# Só cria a release se o push for de tag (iniciado com 'refs/tags/v...')
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}       # Ex.: "v1.0"
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Também só faz upload se for tag
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seu_executavel    # Ajuste o caminho do binário
          asset_name: "meu-projeto-${{ github.run_number }}"
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PWD}}
          
      - name: Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile       # o Dockerfile esta na raiz do projeto
          push: true             # ou true, se você quiser enviar p/ registry
          tags: |                # duas versoes, sempre terá a mais recente e uma tag associada a ela. (mas a latest sempre vai ser atual)
            ${{secrets.DOCKERHUB_USERNAME}}/testEnv_Poxis:${{github.run_number}}
            ${{ secrets.DOCKERHUB_USERNAME}}/testEnv_Poxis:latest
            
      
        
